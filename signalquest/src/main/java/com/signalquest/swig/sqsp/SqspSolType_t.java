/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.signalquest.swig.sqsp;

public final class SqspSolType_t {
  public final static SqspSolType_t SQSP_SOLTYPE_OFFLINE = new SqspSolType_t("SQSP_SOLTYPE_OFFLINE", sqspJNI.SQSP_SOLTYPE_OFFLINE_get());
  public final static SqspSolType_t SQSP_SOLTYPE_ACQUIRING = new SqspSolType_t("SQSP_SOLTYPE_ACQUIRING", sqspJNI.SQSP_SOLTYPE_ACQUIRING_get());
  public final static SqspSolType_t SQSP_SOLTYPE_2D = new SqspSolType_t("SQSP_SOLTYPE_2D", sqspJNI.SQSP_SOLTYPE_2D_get());
  public final static SqspSolType_t SQSP_SOLTYPE_3D = new SqspSolType_t("SQSP_SOLTYPE_3D", sqspJNI.SQSP_SOLTYPE_3D_get());
  public final static SqspSolType_t SQSP_SOLTYPE_RTK_FLOAT = new SqspSolType_t("SQSP_SOLTYPE_RTK_FLOAT", sqspJNI.SQSP_SOLTYPE_RTK_FLOAT_get());
  public final static SqspSolType_t SQSP_SOLTYPE_RTK_FIXED = new SqspSolType_t("SQSP_SOLTYPE_RTK_FIXED", sqspJNI.SQSP_SOLTYPE_RTK_FIXED_get());
  public final static SqspSolType_t SQSP_SOLTYPE_AUTO_SURVEYING = new SqspSolType_t("SQSP_SOLTYPE_AUTO_SURVEYING", sqspJNI.SQSP_SOLTYPE_AUTO_SURVEYING_get());
  public final static SqspSolType_t SQSP_SOLTYPE_FIXED_BASE = new SqspSolType_t("SQSP_SOLTYPE_FIXED_BASE", sqspJNI.SQSP_SOLTYPE_FIXED_BASE_get());
  public final static SqspSolType_t SQSP_SOLTYPE_UNSUPPORTED = new SqspSolType_t("SQSP_SOLTYPE_UNSUPPORTED", sqspJNI.SQSP_SOLTYPE_UNSUPPORTED_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static SqspSolType_t swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + SqspSolType_t.class + " with value " + swigValue);
  }

  private SqspSolType_t(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private SqspSolType_t(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private SqspSolType_t(String swigName, SqspSolType_t swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static SqspSolType_t[] swigValues = { SQSP_SOLTYPE_OFFLINE, SQSP_SOLTYPE_ACQUIRING, SQSP_SOLTYPE_2D, SQSP_SOLTYPE_3D, SQSP_SOLTYPE_RTK_FLOAT, SQSP_SOLTYPE_RTK_FIXED, SQSP_SOLTYPE_AUTO_SURVEYING, SQSP_SOLTYPE_FIXED_BASE, SQSP_SOLTYPE_UNSUPPORTED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

