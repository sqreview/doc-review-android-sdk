/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.signalquest.swig.ntrip;

public final class NTRIP_Parse_Return_t {
  public final static NTRIP_Parse_Return_t NTRIP_BAD_HEADER = new NTRIP_Parse_Return_t("NTRIP_BAD_HEADER", ntripJNI.NTRIP_BAD_HEADER_get());
  public final static NTRIP_Parse_Return_t NTRIP_UNEXPECTED_CALLBACK_FUNCTION = new NTRIP_Parse_Return_t("NTRIP_UNEXPECTED_CALLBACK_FUNCTION", ntripJNI.NTRIP_UNEXPECTED_CALLBACK_FUNCTION_get());
  public final static NTRIP_Parse_Return_t NTRIP_UNKNOWN_ERROR = new NTRIP_Parse_Return_t("NTRIP_UNKNOWN_ERROR", ntripJNI.NTRIP_UNKNOWN_ERROR_get());
  public final static NTRIP_Parse_Return_t NTRIP_NO_CONTEXT = new NTRIP_Parse_Return_t("NTRIP_NO_CONTEXT", ntripJNI.NTRIP_NO_CONTEXT_get());
  public final static NTRIP_Parse_Return_t NTRIP_BUFFER_OVERRUN = new NTRIP_Parse_Return_t("NTRIP_BUFFER_OVERRUN", ntripJNI.NTRIP_BUFFER_OVERRUN_get());
  public final static NTRIP_Parse_Return_t NTRIP_BAD_CRC24Q = new NTRIP_Parse_Return_t("NTRIP_BAD_CRC24Q", ntripJNI.NTRIP_BAD_CRC24Q_get());
  public final static NTRIP_Parse_Return_t NTRIP_BUFFER_TOO_SMALL = new NTRIP_Parse_Return_t("NTRIP_BUFFER_TOO_SMALL", ntripJNI.NTRIP_BUFFER_TOO_SMALL_get());
  public final static NTRIP_Parse_Return_t NTRIP_BAD_PREAMBLE = new NTRIP_Parse_Return_t("NTRIP_BAD_PREAMBLE", ntripJNI.NTRIP_BAD_PREAMBLE_get());
  public final static NTRIP_Parse_Return_t NTRIP_NO_BUFFER = new NTRIP_Parse_Return_t("NTRIP_NO_BUFFER", ntripJNI.NTRIP_NO_BUFFER_get());
  public final static NTRIP_Parse_Return_t NTRIP_NO_CALLBACK = new NTRIP_Parse_Return_t("NTRIP_NO_CALLBACK", ntripJNI.NTRIP_NO_CALLBACK_get());
  public final static NTRIP_Parse_Return_t NTRIP_NOT_ENOUGH_ROOM = new NTRIP_Parse_Return_t("NTRIP_NOT_ENOUGH_ROOM", ntripJNI.NTRIP_NOT_ENOUGH_ROOM_get());
  public final static NTRIP_Parse_Return_t NTRIP_FULL = new NTRIP_Parse_Return_t("NTRIP_FULL", ntripJNI.NTRIP_FULL_get());
  public final static NTRIP_Parse_Return_t NTRIP_NOT_INITIALIZED = new NTRIP_Parse_Return_t("NTRIP_NOT_INITIALIZED", ntripJNI.NTRIP_NOT_INITIALIZED_get());
  public final static NTRIP_Parse_Return_t NTRIP_SUCCESS = new NTRIP_Parse_Return_t("NTRIP_SUCCESS", ntripJNI.NTRIP_SUCCESS_get());
  public final static NTRIP_Parse_Return_t NTRIP_MESSAGE_PENDING = new NTRIP_Parse_Return_t("NTRIP_MESSAGE_PENDING", ntripJNI.NTRIP_MESSAGE_PENDING_get());
  public final static NTRIP_Parse_Return_t NTRIP_NO_MESSAGE_PENDING = new NTRIP_Parse_Return_t("NTRIP_NO_MESSAGE_PENDING");
  public final static NTRIP_Parse_Return_t NTRIP_INCOMPLETE_MESSAGE_PENDING = new NTRIP_Parse_Return_t("NTRIP_INCOMPLETE_MESSAGE_PENDING");
  public final static NTRIP_Parse_Return_t NTRIP_USE_EXISTING_BUFFER = new NTRIP_Parse_Return_t("NTRIP_USE_EXISTING_BUFFER");
  public final static NTRIP_Parse_Return_t NTRIP_USE_EXISTING_CALLBACK = new NTRIP_Parse_Return_t("NTRIP_USE_EXISTING_CALLBACK");
  public final static NTRIP_Parse_Return_t NTRIP_USE_EXISTING_BUFFER_AND_CALLBACK = new NTRIP_Parse_Return_t("NTRIP_USE_EXISTING_BUFFER_AND_CALLBACK");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static NTRIP_Parse_Return_t swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + NTRIP_Parse_Return_t.class + " with value " + swigValue);
  }

  private NTRIP_Parse_Return_t(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private NTRIP_Parse_Return_t(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private NTRIP_Parse_Return_t(String swigName, NTRIP_Parse_Return_t swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static NTRIP_Parse_Return_t[] swigValues = { NTRIP_BAD_HEADER, NTRIP_UNEXPECTED_CALLBACK_FUNCTION, NTRIP_UNKNOWN_ERROR, NTRIP_NO_CONTEXT, NTRIP_BUFFER_OVERRUN, NTRIP_BAD_CRC24Q, NTRIP_BUFFER_TOO_SMALL, NTRIP_BAD_PREAMBLE, NTRIP_NO_BUFFER, NTRIP_NO_CALLBACK, NTRIP_NOT_ENOUGH_ROOM, NTRIP_FULL, NTRIP_NOT_INITIALIZED, NTRIP_SUCCESS, NTRIP_MESSAGE_PENDING, NTRIP_NO_MESSAGE_PENDING, NTRIP_INCOMPLETE_MESSAGE_PENDING, NTRIP_USE_EXISTING_BUFFER, NTRIP_USE_EXISTING_CALLBACK, NTRIP_USE_EXISTING_BUFFER_AND_CALLBACK };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

