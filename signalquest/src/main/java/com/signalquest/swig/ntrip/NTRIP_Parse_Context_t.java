/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.signalquest.swig.ntrip;

public class NTRIP_Parse_Context_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected NTRIP_Parse_Context_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NTRIP_Parse_Context_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(NTRIP_Parse_Context_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ntripJNI.delete_NTRIP_Parse_Context_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setCallBack(SWIGTYPE_p_f_enum_NTRIP_Parse_Return_e_enum_NTRIP_Parse_Types_e_p_uint8_t_size_t__void value) {
    ntripJNI.NTRIP_Parse_Context_t_CallBack_set(swigCPtr, this, SWIGTYPE_p_f_enum_NTRIP_Parse_Return_e_enum_NTRIP_Parse_Types_e_p_uint8_t_size_t__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_enum_NTRIP_Parse_Return_e_enum_NTRIP_Parse_Types_e_p_uint8_t_size_t__void getCallBack() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_CallBack_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_enum_NTRIP_Parse_Return_e_enum_NTRIP_Parse_Types_e_p_uint8_t_size_t__void(cPtr, false);
  }

  public void setWorkingBuffer(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_WorkingBuffer_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getWorkingBuffer() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_WorkingBuffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setLength(long value) {
    ntripJNI.NTRIP_Parse_Context_t_Length_set(swigCPtr, this, value);
  }

  public long getLength() {
    return ntripJNI.NTRIP_Parse_Context_t_Length_get(swigCPtr, this);
  }

  public void setState(NTRIP_Parse_Context_State_t value) {
    ntripJNI.NTRIP_Parse_Context_t_State_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Parse_Context_State_t getState() {
    return NTRIP_Parse_Context_State_t.swigToEnum(ntripJNI.NTRIP_Parse_Context_t_State_get(swigCPtr, this));
  }

  public void setLast_State(NTRIP_Parse_Context_State_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Last_State_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Parse_Context_State_t getLast_State() {
    return NTRIP_Parse_Context_State_t.swigToEnum(ntripJNI.NTRIP_Parse_Context_t_Last_State_get(swigCPtr, this));
  }

  public void setHead(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Head_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getHead() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Head_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setTail(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Tail_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getTail() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Tail_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setWptr(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Wptr_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getWptr() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Wptr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setBptr(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Bptr_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getBptr() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Bptr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setEnd_of_Chunk(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Context_t_End_of_Chunk_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getEnd_of_Chunk() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_End_of_Chunk_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setCount(int value) {
    ntripJNI.NTRIP_Parse_Context_t_Count_set(swigCPtr, this, value);
  }

  public int getCount() {
    return ntripJNI.NTRIP_Parse_Context_t_Count_get(swigCPtr, this);
  }

  public void setFree(int value) {
    ntripJNI.NTRIP_Parse_Context_t_Free_set(swigCPtr, this, value);
  }

  public int getFree() {
    return ntripJNI.NTRIP_Parse_Context_t_Free_get(swigCPtr, this);
  }

  public void setChunkSize(int value) {
    ntripJNI.NTRIP_Parse_Context_t_ChunkSize_set(swigCPtr, this, value);
  }

  public int getChunkSize() {
    return ntripJNI.NTRIP_Parse_Context_t_ChunkSize_get(swigCPtr, this);
  }

  public void setChunked(boolean value) {
    ntripJNI.NTRIP_Parse_Context_t_chunked_set(swigCPtr, this, value);
  }

  public boolean getChunked() {
    return ntripJNI.NTRIP_Parse_Context_t_chunked_get(swigCPtr, this);
  }

  public void setLast_Return_Value(NTRIP_Parse_Return_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Last_Return_Value_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Parse_Return_t getLast_Return_Value() {
    return NTRIP_Parse_Return_t.swigToEnum(ntripJNI.NTRIP_Parse_Context_t_Last_Return_Value_get(swigCPtr, this));
  }

  public void setNTRIP_Version(NTRIP_Version_t value) {
    ntripJNI.NTRIP_Parse_Context_t_NTRIP_Version_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Version_t getNTRIP_Version() {
    return NTRIP_Version_t.swigToEnum(ntripJNI.NTRIP_Parse_Context_t_NTRIP_Version_get(swigCPtr, this));
  }

  public void setPoll(NTRIP_Parse_Poll_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Poll_set(swigCPtr, this, NTRIP_Parse_Poll_t.getCPtr(value), value);
  }

  public NTRIP_Parse_Poll_t getPoll() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Poll_get(swigCPtr, this);
    return (cPtr == 0) ? null : new NTRIP_Parse_Poll_t(cPtr, false);
  }

  public void setHeader(NTRIP_Header_Info_t value) {
    ntripJNI.NTRIP_Parse_Context_t_Header_set(swigCPtr, this, NTRIP_Header_Info_t.getCPtr(value), value);
  }

  public NTRIP_Header_Info_t getHeader() {
    long cPtr = ntripJNI.NTRIP_Parse_Context_t_Header_get(swigCPtr, this);
    return (cPtr == 0) ? null : new NTRIP_Header_Info_t(cPtr, false);
  }

  public NTRIP_Parse_Context_t() {
    this(ntripJNI.new_NTRIP_Parse_Context_t(), true);
  }

}
