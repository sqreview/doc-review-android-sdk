/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.signalquest.swig.ntrip;

public class NTRIP_Parse_Poll_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected NTRIP_Parse_Poll_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NTRIP_Parse_Poll_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(NTRIP_Parse_Poll_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ntripJNI.delete_NTRIP_Parse_Poll_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setStatus(NTRIP_Parse_Return_t value) {
    ntripJNI.NTRIP_Parse_Poll_t_Status_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Parse_Return_t getStatus() {
    return NTRIP_Parse_Return_t.swigToEnum(ntripJNI.NTRIP_Parse_Poll_t_Status_get(swigCPtr, this));
  }

  public void setType(NTRIP_Parse_Types_t value) {
    ntripJNI.NTRIP_Parse_Poll_t_type_set(swigCPtr, this, value.swigValue());
  }

  public NTRIP_Parse_Types_t getType() {
    return NTRIP_Parse_Types_t.swigToEnum(ntripJNI.NTRIP_Parse_Poll_t_type_get(swigCPtr, this));
  }

  public void setBuffer(SWIGTYPE_p_uint8_t value) {
    ntripJNI.NTRIP_Parse_Poll_t_Buffer_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getBuffer() {
    long cPtr = ntripJNI.NTRIP_Parse_Poll_t_Buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setLength(long value) {
    ntripJNI.NTRIP_Parse_Poll_t_Length_set(swigCPtr, this, value);
  }

  public long getLength() {
    return ntripJNI.NTRIP_Parse_Poll_t_Length_get(swigCPtr, this);
  }

  public NTRIP_Parse_Poll_t() {
    this(ntripJNI.new_NTRIP_Parse_Poll_t(), true);
  }

}
